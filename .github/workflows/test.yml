name: test
on:
  workflow_call:
    inputs:
      go:
        description: 'Go version'
        default: 1.17
        required: false
        type: string

jobs:
  run:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: true
      matrix:
        flags: [""]
        arch:
          - amd64
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        go:
          - ${{ inputs.go }}
        include:
          - arch: 386
            runner: ubuntu-latest
            go: ${{ inputs.go }}
          - arch: amd64
            runner: ubuntu-latest
            flags: "-race"
            go: ${{ inputs.go }}
          - arch: arm64
            runner: self-hosted
            go: ${{ inputs.go }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2.1.7
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-

      - name: Set up gotestfmt
        run: go install github.com/haveyoudebuggedit/gotestfmt/cmd/gotestfmt@latest

      - name: Run tests
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
        run: |
          set -euo pipefail
          go test --timeout 15m -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
        shell: bash

      # Upload the original go test log as an artifact for later review.
      - name: Upload test log
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-log
          path: /tmp/gotest.log
          if-no-files-found: error
