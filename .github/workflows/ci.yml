name: ci

on:
  workflow_call:
    inputs:
      go:
        description: 'Go version'
        default: 1.17
        required: false
        type: string

jobs:
  test:
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: true
      matrix:
        flags: [""]
        arch:
          - amd64
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        go:
          - ${{ inputs.go }}
        include:
          - arch: 386
            runner: ubuntu-latest
            go: ${{ inputs.go }}
          - arch: amd64
            runner: ubuntu-latest
            flags: "-race"
            go: ${{ inputs.go }}
          - arch: arm64
            runner: self-hosted
            go: ${{ inputs.go }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ matrix.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"

      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            test-${{ runner.os }}-${{ matrix.arch }}-go-${{ matrix.go }}-

      - name: Run tests
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
        run: go test --timeout 5m ./...

  analyze:
    name: analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'go' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      # Initializes the CodeQL tools for scanning.
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
          # If you wish to specify custom queries, you can do so here or in a config file.
          # By default, queries listed here will override any specified in a config file.
          # Prefix the list here with "+" to use these queries and those in the config file.
          # queries: ./path/to/local/query, your-org/your-repo/queries@main

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  commit:
    runs-on: ubuntu-latest
    if: github.actor != 'dependabot[bot]'
    steps:
      - uses: actions/checkout@v2.4.0
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4.1.9

  cover:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: test-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            test-${{ runner.os }}-go-

      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Run tests with coverage
        run: make coverage

      - name: Upload artifact
        uses: actions/upload-artifact@v2.2.4
        with:
          name: coverage
          path: profile.out
          if-no-files-found: error
          retention-days: 1

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  cover-send:
    runs-on: ubuntu-latest
    needs:
      - cover
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Download artifact
        uses: actions/download-artifact@v2.0.10
        with:
          name: coverage

      - name: Send coverage
        uses: codecov/codecov-action@v2.1.0
        with:
          file: profile.out

  nancy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: List dependencies
        run: go list -json -m all > go.list

      - name: Run nancy
        uses: sonatype-nexus-community/nancy-github-action@v1.0.2

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: Lint
        uses: golangci/golangci-lint-action@v2.5.2
        with:
          version: latest
          args: --timeout 5m
          skip-go-installation: true

  # Check if there are any dirty changes after go mod tidy
  mod:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-mod-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-mod-${{ runner.os }}-go-

      - name: Tidy
        run: go mod tidy

      - name: Check git diff
        run: git diff --exit-code

  # Check if there are any dirty changes after go generate
  gen:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.4.0

      - name: Install Go
        uses: actions/setup-go@v2.1.4
        with:
          go-version: ${{ inputs.go }}

      - name: Get Go environment
        id: go-env
        run: |
          echo "::set-output name=cache::$(go env GOCACHE)"
          echo "::set-output name=modcache::$(go env GOMODCACHE)"
      - name: Set up cache
        uses: actions/cache@v2.1.6
        with:
          path: |
            ${{ steps.go-env.outputs.cache }}
            ${{ steps.go-env.outputs.modcache }}
          key: check-generate-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            check-generate-${{ runner.os }}-go-

      - name: Generate
        run: go generate ./...

      - name: Check git diff
        run: git diff --exit-code
