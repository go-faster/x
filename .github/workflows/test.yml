name: test
on:
  workflow_call:
    inputs:
      go:
        description: "Go version"
        default: "oldstable"
        required: false
        type: string
      enable-386:
        description: "Add 386 to test matrix"
        default: true
        required: false
        type: boolean
      enable-arm64:
        description: "Add arm64 to test matrix"
        default: false
        required: false
        type: boolean
      submodules:
        description: "Whether to checkout submodules"
        default: true
        required: false
        type: boolean

jobs:
  run:
    timeout-minutes: 30
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: true
      matrix:
        flags: [""]
        arch:
          - amd64
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest
          - ubuntu-latest${{ inputs.enable-arm64 && '-arm64' || '' }}
        go:
          - ${{ inputs.go }}
        include:
          # Hacky expression: if enable-386 is true, value is '386'
          # Otherwise, value is 'amd64'.
          # Actions runner would handle duplicate combination fine.
          - arch: ${{ inputs.enable-386 && '386' || 'amd64' }}
            runner: ubuntu-latest
            go: ${{ inputs.go }}
          - arch: amd64
            runner: ubuntu-latest
            flags: "-race"
            go: ${{ inputs.go }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          submodules: ${{ inputs.submodules }}

      - name: Install Go
        uses: actions/setup-go@v6
        with:
          go-version: ${{ matrix.go }}
          cache: false

      - name: Get Go environment
        id: go-env
        shell: bash
        run: |
          echo "cache=$(go env GOCACHE)" >> $GITHUB_ENV
          echo "modcache=$(go env GOMODCACHE)" >> $GITHUB_ENV

        # Build cache key prefix, using runner OS and arch.
      - name: Compute cache prefix
        id: cache-prefix
        shell: bash
        env:
          RUNNER_PREFIX: ${{ runner.os }}-${{ runner.arch }}-go
          ARCH_PREFIX: ${{ matrix.arch != 'amd64' && format('-{0}', matrix.arch) || '' }}
          RACE_PREFIX: ${{ contains(matrix.flags, '-race') && '-race' || '' }}
        run: echo "cache_prefix=$RUNNER_PREFIX$ARCH_PREFIX$RACE_PREFIX" >> $GITHUB_ENV

      - name: Set up cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.cache }}
            ${{ env.modcache }}
          key: ${{ env.cache_prefix }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ env.cache_prefix }}-

      - name: Run tests
        env:
          GOARCH: ${{ matrix.arch }}
          GOFLAGS: ${{ matrix.flags }}
        run: go test --timeout 30m ./...
